
°react °redux °sagas
+ "un unica fonte di verità" (singolo store globale)
+ gestione completa, ad ogni livello, dell'applicativo
+ netta divisione del MVC
- elevata complessità
- elevato numero di dipendenze esterne necessarie
- maggior numero di file necessari
- maggiori risorse computazionali

°react °redux
+ "un unica fonte di verità" (singolo store globale)
+ maggior semplicità di codifica
- necessario impostare lo store di redux come variabile globale
- se lo store non è una variabile globale, necessario passarlo ad ogni livello dell DOM virtuale
- necessario passare ad ogni livello del controller le funzioni di gestione dello store
- rischio di bassa divisione del MVC
- rischio callback hell (??)

°react °react hooks °react context
+ ridotto numero di dipendenze esterne necessarie
+ possibilità di implementare store ad ogni livello dell'applicativo
+ singoli store con compiti specifici
+ l'esistenza dello store dipende dal ciclo di vita del componente chiamante (più sicurezza)
+ store richimabile solo quando necessario
- necessario richiamare il context e gli hooks ad ogni uso
- l'esistenza dello store dipende dal ciclo di vita del componente chiamante (assenza di cache)
- elevata complessità
- rischio callback hell (??)
